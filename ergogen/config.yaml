meta:
  engine: 4.1.0
  name: Koala52
  version: 0.1.0
  description: &description "Koala52 v0.1.0\\nby Tommy Larsson"
  author: Tommy Larsson
  github: https://github.com/larssont/Koala52

# U is a predefined unit of measure that means 19.05mm, which is MX spacing (u is 19.00mm)
units:
  # Defaults
  $default_spread: U
  $default_padding: U
  $default_width: 18
  $default_height: 18

  # Proxy Spacing Variables
  kx: $default_spread
  ky: $default_padding

  # Private variables for a 1u keycap width/height, not meant to be used apart from here
  # because keycap dimensions are based on key spacing, rather than
  # a straight multiple of a 1u keycap.
  # E.g. a 1u keycap is 18 mm, but a 1.5u keycap is 27.525 if the spacing is 19.05
  __kcx: $default_width
  __kcy: $default_height

  # Keycap gaps
  dx: kx - __kcx
  dy: ky - __kcy

  # Padding Variables
  # Padding can be any value, but I chose to match it with the spacing between the keycaps for consistency.
  px: kx + dx
  py: ky + dy

  # Fillet
  fillet_max: 2.25
  fillet_min: 0.75
  fillet_mcu: fillet_min

  # USB-C cable dimensions
  usb_cable_x: 13.35
  usb_cable_ht: 7.5

  # PCB
  pcb_z: 1.6
  pcb_edge_margin: 0.35 # JLCPCB minimum is 0.3 mm

  # MCU variables for Supermini RP2040
  mcu_usb_overhang: 1.4
  mcu_usb_x: 9 # Measures 9 mm
  mcu_usb_y: 7.32 # Measures 7.32
  mcu_usb_z: 3.16
  mcu_x: 17.89
  mcu_y: 23.5
  mcu_pin_x: 1.65
  mcu_pin_y: 1.65
  mcu_pad_width: 1.5
  mcu_inner_pad_h_length: 1.95 - pcb_edge_margin
  mcu_inner_pad_v_length: 1.95 - pcb_edge_margin
  mcu_outer_pad_h_length: mcu_inner_pad_h_length
  mcu_outer_pad_v_length: mcu_inner_pad_v_length
  mcu_inner_x: mcu_x - 2*mcu_inner_pad_h_length
  mcu_inner_y: mcu_y - mcu_inner_pad_v_length
  mcu_inner_cutout_x: mcu_inner_x - 2*pcb_edge_margin
  mcu_inner_cutout_y: mcu_inner_y - 2*pcb_edge_margin
  mcu_inner_slot_x: mcu_inner_x # No need for MoE on these two, since there's plenty of margin already
  mcu_inner_slot_y: mcu_inner_y
  
  mcu_usb_front_moe: 0.4 # 0.4 mm MoE each side
  mcu_usb_front_x: mcu_usb_x + 2*mcu_usb_front_moe
  mcu_usb_front_y: mcu_usb_y + 2*mcu_usb_front_moe
  mcu_usb_front_z: mcu_usb_z + 2*mcu_usb_front_moe
  mcu_usb_front_corner: 1.2

  mcu_upper_recess_top_margin: 4.13
  mcu_upper_recess_x: mcu_inner_x
  mcu_upper_recess_y: mcu_inner_y - mcu_upper_recess_top_margin
  mcu_upper_recess_z: 2.7 - pcb_z + 0.25 # Tallest component is 2.7 mm, 0.25 mm MoE

  # USB Mini interconnect
  usb_mini_x: 9
  usb_mini_y: 7.2
  usb_mini_z: 3.95

  usb_mini_moe: 0.25 # Low MoE because the footprint's pads are wider than the connector.
  usb_mini_fillet: 0.85 # Matches the pads' corner radii

  usb_mini_cutout_x: usb_mini_x + 2*usb_mini_moe
  usb_mini_cutout_y: usb_mini_y + 2*usb_mini_moe

  # Piezo
  piezo_x: 11
  piezo_y: 9

  # Mounting holes
  mh_dia: 2.2
  mh_clearance: 1
  mh_total: mh_dia + 2*mh_clearance

  # Hanglife M2 threaded inserts
  insert_z: 4 # 3 mm insert, 1 mm clearance underneath
  insert_dia: 2.68
  insert_standoff_dia: insert_dia + 1.5*2

  # Case variables
  # NOTE! Wall thickness > 4.29 fails due to bezier curve accuracy
  cs_wall: 2.4
  cs_comp_wall: 1.2
  cs_inner_margin: 0.3 # From PCB to inner edge of case
  cs_outer_margin: cs_inner_margin + cs_wall # From PCB to outer edge of case

  # Rubber feet
  # Bumpon 3M SJ5382
  foot_moe: 0.2
  foot_dia: 6.4 + foot_moe
  foot_recess: 0.5
  foot_margin: foot_dia/2 # Margin to edge of board
  foot_shift: cs_outer_margin - foot_margin - foot_dia/2 

  # Magsafe
  magsafe_recess: 0.4
  magsafe_moe: 0.2
  magsafe_inner_dia: 45 - magsafe_moe
  magsafe_outer_dia: 55 + magsafe_moe

  # Required gap between PCB and case to ensure clearance for the tallest components:
  # - Piezo KLJ-1102:                     1.80 mm
  # - Molex 54819-0589 (USB Mini-B):      1.80 mm
  # - Gateron LP Hotswap Socket:          1.87 mm
  # - BAV70 SMD Diode:                    1.12 mm
  # - KS33 Switch:                        3.25 mm total height â†’ minus PCB thickness
  #
  # Determine the tallest component above the PCB surface:
  comp_max_z: max(1.87, 3.25 - pcb_z)

  # Gap = tallest component + 0.25 mm margin, rounded up to nearest 0.05 mm
  cs_gap: ceil((comp_max_z + 0.25) / 0.05) * 0.05

  # Minimum case height
  # Ensures that the case bottom has a minimum thickness of at least 0.8 mm,
  # while accounting for recessed areas (e.g., rubber feet and MagSafe).
  cs_min_z: 0.8 + max(foot_recess, magsafe_recess)
  cs_standoff_z: cs_min_z + max(insert_z, cs_gap)
  cs_wall_z: cs_standoff_z + pcb_z

  # Switch plate
  plate_ht: 2.6 # 2.5 mm is needed for KS33 switches, but 2.6 mm is good practice
  plate_sw_x: 14
  plate_sw_y: 14
  plate_sw_z: 1.2
  plate_sw_big_x: 14.7 + 0.3 # 0.3 mm MoE, 0.15 mm each side
  plate_sw_big_y: plate_sw_y
  plate_pcb_gap: plate_ht - plate_sw_z

points:
  key:
    left_colrow: '{{left_col}}_{{row}}'
  zones:
    matrix:
      anchor:
        shift: [75, -150]
        rotate: 0
      columns:
        outer:
          key:
            colpin: P27
            mirror.colpin: P5
          rows.num.skip: true
        pinky:
          key:
            colpin: P9
            left_col: outer
            mirror.colpin: P14
            stagger: -(1/3)ky
        ring:
          key:
            colpin: P10
            left_col: pinky
            mirror.colpin: P12
            stagger: 5/7ky
        middle:
          key:
            colpin: P11
            left_col: ring
            mirror.colpin: P11
            stagger: 1/2ky
        index:
          key:
            colpin: P12
            left_col: middle
            mirror.colpin: P10
            stagger: -(1/3)ky
        inner:
          key:
            colpin: P13
            left_col: index
            mirror.colpin: P8
            stagger: -(1/10)ky
      rows:
        bottom:
          rowpin: P26
          mirror.rowpin: P6
        home:
          rowpin: P15
          mirror.rowpin: P7
        top:
          rowpin: P14
          mirror.rowpin: P9
        num:
          rowpin: P8
          mirror.rowpin: P13
    thumb:
      anchor:
        - ref: matrix_index_bottom
          affect: x
          shift: 1/10kx
        - ref: matrix_inner_bottom
          affect: y
          shift: -1ky
      columns:
        tucky:
          key:
            colpin: P11
            mirror.colpin: P11
            name: thumb_tucky
        middy:
          key:
            left_col: tucky
            colpin: P12
            mirror.colpin: P10
            splay: -16
            origin: [-0.5kx, -0.5ky]
            name: thumb_middy
        reachy:
          key:
            left_col: middy
            colpin: P13
            mirror.colpin: P8
            splay: 90
            shift: [-0.25kx, 0]
            width: 1.5kx - dx
            name: thumb_reachy
            tags:
              - w_1_5u
      rows:
        cluster:
          rowpin: P7
          mirror.rowpin: P15

    # Minimum position for mcu, since top_left/top_right depends on mcu, and vice versa.
    # Y-axis depends of the size of the inner cutout because the MCU is bottom mounted.
    mcu_min:
      anchor:
        - ref: matrix_pinky_num
          affect: y
          shift: (ky + dy + mcu_inner_cutout_y)/2
        - aggregate:
            parts:
              - ref: matrix_pinky_num
              - ref: matrix_outer_top
          affect: x
    usb_mini_min:
      anchor:
        - ref: matrix_inner_num
          shift: [0, (ky + dy + usb_mini_y)/2]

    pos_tr:
      anchor:
        - aggregate:
            method: max
            parts:
              - ref: mcu_min
                shift: [0, mcu_y/2]
              - ref: usb_mini_min
                shift: [0, usb_mini_y/2 + pcb_edge_margin]
              - ref: matrix_middle_num
                shift: [0, 0.5py]
              - ref: matrix_inner_num
                shift: [0.5px, 0.5py]
    pos_tl:
      anchor:
        - ref: pos_tr
          affect: y
        - ref: matrix_outer_top
          affect: x
          shift: -0.5px
    pos_bl:
      anchor:
        - ref: pos_tl
          affect: x
        - ref: matrix_outer_bottom
          affect: y
          shift: -0.5py
    pos_br:
      anchor:
        - ref: matrix_inner_bottom
          shift: [-0.5px, -0.5py]
    pos_thumb_bl:
      anchor:
        - aggregate:
            method: min
            parts:
              - ref: matrix_index_bottom
                shift: [-0.5px, -0.5py]
              - ref: thumb_tucky
                shift: [0.5px, -0.5py]
    pos_thumb_br:
      anchor:
        - ref: thumb_reachy
          shift: [-0.55px, -0.5py] # Shifted slightly to make room for a curve in the thumb cluster
    pos_thumb_tr:
      anchor:
        - ref: thumb_reachy
          shift: [0.55px, -0.5py] # Shifted slightly to make room for a curve in the thumb cluster
    
    version_text:
      anchor:
        - ref: matrix_outer_top
          shift: [0, 0.5ky - 2]

    usb_mini:
      anchor:
        - ref: usb_mini_min
          affect: x
        - ref: pos_tr
          shift: -usb_mini_y/2 - pcb_edge_margin
          affect: y

    mcu:
      anchor:
        - ref: mcu_min
          affect: x
        - ref: pos_tl
          shift: -mcu_y/2
          affect: y
    mcu_usb:
      anchor:
        - ref: mcu
          shift: [0, mcu_y/2 - mcu_usb_y/2]
    mcu_upper_recess: 
      anchor:
        - ref: mcu
          shift: [0, mcu_y/2 - mcu_upper_recess_top_margin - mcu_upper_recess_y/2]
    mcu_inner:
      anchor:
        - ref: mcu
          affect: x
        - ref: pos_tl
          affect: y
          shift: -mcu_inner_y/2

    piezo:
      anchor:
        - ref: pos_tl
          shift: -piezo_y/2 - 1
          affect: y
        - ref: matrix_ring_num
          affect: x

    mh_tl:
      anchor:
        - ref: pos_tl
          shift: [mh_total, -mh_total]
    mh_tr:
      anchor:
        - ref: matrix_inner_num
          shift: [-0.5kx, 0.5ky - insert_standoff_dia/2]
    mh_mr:
      anchor:
        - aggregate:
            parts:
              - ref: matrix_middle_home
                shift: [0, -0.5ky]
              - ref: matrix_index_top
    mh_ml:
      anchor:
        - aggregate:
            parts:
              - ref: matrix_pinky_top
                shift: [0, -0.5ky]
              - ref: matrix_ring_top
    mh_bl:
      anchor:
        - ref: matrix_outer_bottom
          shift: [0.5kx, insert_standoff_dia/2 - 1.8]
    mh_br:
      anchor:
        - ref: matrix_index_bottom
          shift: [0.5kx, insert_standoff_dia/2 - 1.8]
    mh_thumb:
      anchor:
        - ref: thumb_middy
          shift: [0.5kx, insert_standoff_dia/2 - 1.8]

    foot_tl:
      anchor:
        - ref: pos_tl
          shift: [-foot_shift, foot_shift]
    foot_tr:
      anchor:
        - ref: pos_tr
          shift: foot_shift
    foot_tm:
      anchor:
        - aggregate:
            parts:
              - ref: pos_tr
              - ref: pos_tl
          shift: [0, foot_shift]
    foot_bl:
      anchor:
        - ref: pos_bl
          shift: -foot_shift
    foot_thumb_l:
      anchor:
        - ref: pos_thumb_bl
          shift: -foot_shift
    foot_thumb_r:
      anchor:
        - ref: pos_thumb_br
          shift: -foot_shift

    magsafe:
      anchor:
        - aggregate:
            parts:
              - ref: pos_tr
              - ref: pos_bl
  mirror: &mirror
    ref: matrix_inner_num
    distance: 5kx

outlines:
  matrix_area_right:
    $extends: outlines.matrix_area_left
    $args: ["mirror_"]
  matrix_area_left:
    $params: [<mirror>]
    $args: [""]
    area:
      what: rectangle
      where: 
        - [/^<mirror>matrix_.*/]
      size: [px, py]

  keys_right:
    $extends: outlines.keys_left
    $args: [mirror_]
  keys_left:
    $params: [<mirror>]
    $args: [""]
    1u:
      what: rectangle
      where:
        # Filter out any key which is not 1u
        - [/^((<mirror>)(thumb|matrix)_.*)/, "-/^([wh])_([1-9])(_\\d{1,2})?(u)/"]
      size: [kx - dx, ky - dy]
      operation: stack
    w_1_25u:
      what: rectangle
      where:
        - [/^((<mirror>)(thumb|matrix)_.*)/, w_1_25u]
      size: [1.25kx - dx, ky - dy]
      operation: stack
    w_1_5u:
      what: rectangle
      where:
        - [/^((<mirror>)(thumb|matrix)_.*)/, w_1_5u]
      size: [1.5kx - dx, ky - dy]
      operation: stack

  thumb_area_right:
    $extends: outlines.thumb_area_left
    $args: [mirror_, right]
  thumb_area_left:
    $params: [<mirror>, <side>]
    $args: ["", "left"]
    # The bezier curves in this outline are somewhat unstable. They rely on very high precision (low accuracy = more points),
    # and the placement of the points will have an effect on what accuracy is needed for a functioning outline.
    # If anything is changed in regards to points contained by the bezier curves, and the outline is longer closed, mess around with the bezier curves to
    # see if that could solve the problem.
    cluster:
      what: polygon
      points:
        - ref: <mirror>matrix_inner_home
          shift: [0.5px, 0]
        - ref: <mirror>matrix_inner_bottom
          shift: [0.5px, 0py]
          bezier:
            type: quadratic
            accuracy: 0.04
        - aggregate:
            method: intersect
            parts:
              - ref: <mirror>matrix_inner_bottom
                shift: [0.5px, 0]
              - ref: <mirror>pos_thumb_tr
        - ref: <mirror>pos_thumb_tr
          shift: [0, 1/3py]
        - ref: <mirror>pos_thumb_tr
        - ref: <mirror>pos_thumb_br
        - ref: <mirror>pos_thumb_br
          shift: [0, 2/5py]
          bezier: 
            type: cubic
            accuracy: 0.08
        - aggregate:
            method: intersect
            parts:
              - ref: <mirror>pos_thumb_br
              - ref: <mirror>thumb_middy
        - aggregate:
            method: intersect
            parts:
              - ref: <mirror>thumb_middy
                shift: 0.5px
              - ref: <mirror>pos_thumb_bl
                rotate: 90
          shift: [0, 1]
        - ref: <mirror>pos_thumb_bl
          shift: [2*fillet_max, 0]
        - ref: <mirror>pos_thumb_bl
        - ref: <mirror>matrix_index_bottom
          affect: y

  _mcu_inner_cutout_right:
    $extends: outlines._mcu_inner_cutout_left
    $args: ["mirror_"]
  _mcu_inner_cutout_left:
    $params: [<mirror>]
    $args: [""]
    cutout:
      what: rectangle
      where: <mirror>mcu_inner
      size:
        - mcu_inner_cutout_x
        - mcu_inner_cutout_y + 100
      adjust.shift: [0, 50] # Shifted up to compensate for y size +100
      fillet: fillet_mcu

  _mcu_upper_recess_right:
    $extends: outlines._mcu_upper_recess_left
    $args: [mirror_, right]
  _mcu_upper_recess_left:
    $params: [<mirror>, <side>]
    $args: ["", left]
    slot:
      what: rectangle
      size: [mcu_upper_recess_x, mcu_upper_recess_y]
      where: <mirror>mcu_upper_recess

  _mcu_usb_front_inner_right:
    $extends: outlines._mcu_usb_front_inner_left
    $args: [mirror_, right]
  _mcu_usb_front_inner_left:
    $params: [<mirror>, <side>]
    $args: ["", left]
    inner:
      what: rectangle
      where:
        - ref: <mirror>mcu_usb
          shift: [0, -mcu_usb_front_y/2]
      size:
        - mcu_usb_front_x
        - mcu_usb_front_z
      corner: mcu_usb_front_corner

  _mcu_usb_front_outer_right:
    $extends: outlines._mcu_usb_front_outer_left
    $args: [mirror_, right]
  _mcu_usb_front_outer_left:
    $params: [<mirror>, <side>]
    $args: ["", left]
    outer:
      what: outline
      name: _mcu_usb_front_inner_<side>
      expand: cs_comp_wall
  
  _usb_mini_right:
    $extends: outlines._usb_mini_left
    $args: ["mirror_"]
  _usb_mini_left:
    $params: [<mirror>]
    $args: [""]
    cutout:
      what: rectangle
      where: 
        - ref: <mirror>usb_mini
      size:
        - usb_mini_cutout_x
        - usb_mini_cutout_x + 100
      adjust.shift: [0, 50] # Shifted up to compensate for y size +100
      fillet: usb_mini_fillet

  _foot_slots_right:
    $args: ["mirror_"]
    $extends: outlines._foot_slots_left
  _foot_slots_left:
    $params: [<mirror>]
    $args: [""]
    slots:
      what: circle
      radius: foot_dia/2
      where: /^((<mirror>)(foot)_.*)/

  _top_extension_right:
    $extends: outlines._top_extension_left
    $args: [mirror_]
  _top_extension_left:
    $params: [<mirror>]
    $args: [""]
    extension: 
      what: polygon
      points:
        - ref: <mirror>pos_tr
        - ref: <mirror>matrix_inner_home
          affect: y
        - ref: <mirror>pos_tl
          affect: x
        - ref: <mirror>pos_tl
          affect: y

  _empty:
    - what: rectangle

  board_right:
    $extends: outlines.board_left
    $args: [right]
  board_left:
    $params: [<side>]
    $args: [left]
    top:
      what: outline
      name: _top_extension_<side>
    thumb:
      what: outline
      name: thumb_area_<side>
    matrix:
      what: outline
      name: matrix_area_<side>
    expand_1:
      what: outline
      name: _empty
      expand: 0
      joints: pointy
    expand_2:
      what: outline
      name: _empty
      expand: 0
      joints: pointy
    fillet_max:
      what: outline
      name: _empty
      fillet: fillet_max
    fillet_min:
      what: outline
      name: _empty
      fillet: fillet_min

  case_inner_right:
    $extends: outlines.board_right
    expand_1.expand: -fillet_max
    expand_2.expand: fillet_max + cs_inner_margin

  case_inner_left:
    $extends: outlines.board_left
    expand_1.expand: -fillet_max
    expand_2.expand: fillet_max + cs_inner_margin

  case_outer_right:
    $extends: outlines.board_right
    expand_1.expand: -fillet_max
    expand_2.expand: fillet_max + cs_outer_margin
    
  case_outer_left:
    $extends: outlines.board_left
    expand_1.expand: -fillet_max
    expand_2.expand: fillet_max + cs_outer_margin

  _plate_right:
    $extends: outlines._plate_left
    $args: [mirror_, right]
  _plate_left:
    $params: [<mirror>, <side>]
    $args: ["", left]
    outer:
      what: outline
      name: case_outer_<side>
    mh:
      what: circle
      radius: mh_dia/2
      where: 
        - /^<mirror>(mh)_.*/
      operation: subtract
    switch:
      what: rectangle
      size: [plate_sw_x, plate_sw_y]
      where:
        - [/^((<mirror>)(thumb|matrix)_.*)/]
      operation: subtract
    usb_mini:
      what: outline
      name: _usb_mini_<side>
      operation: subtract

  _plate_gap_right:
    $extends: outlines._plate_gap_left
    $args: [mirror_, right]
  _plate_gap_left: 
    $params: [<mirror>, <side>]
    $args: ["", left]
    switch:
      what: rectangle
      size: [plate_sw_big_x, plate_sw_big_y]
      where:
        - [/^((<mirror>)(thumb|matrix)_.*)/]

  pcb_right:
    $extends: outlines.pcb_left
    $args: [right]
  pcb_left:
    $params: [<side>]
    $args: [left]
    board:
      what: outline
      name: board_<side>
    mcu:
      what: outline
      name: _mcu_inner_cutout_<side>
      operation: subtract

  _void_right:
    $extends: outlines._void_left
    $args: [mirror_, right]
  _void_left:
    $params: [<mirror>, <side>]
    $args: ["", left]
    rect:
      what: rectangle
      size: [1000, 1000]
      where: <mirror>matrix_middle_home
    board:
      what: outline
      name: case_outer_<side>
      operation: subtract

  proto_left:
    - name: board_left
    - name: keys_left
      operation: stack
  proto_right:
    - name: board_right
    - name: keys_right
      operation: stack
  proto:
    - name: proto_left
    - name: proto_right
      operation: stack

  _standoffs_insert_right:
    $extends: outlines._standoffs_insert_left
    $args: [mirror_]
  _standoffs_insert_left:
    $params: [<mirror>]
    $args: [""]
    insert:
      what: circle
      radius: insert_dia/2
      where: /^<mirror>(mh)_.*/
  _standoffs_base_right:
    $extends: outlines._standoffs_base_left
    $args: [mirror_, right]
  _standoffs_base_left:
    $params: [<mirror>, <side>]
    $args: ["", left]
    standoffs:
      what: circle
      radius: insert_standoff_dia/2
      where: /^<mirror>(mh)_.*/
    inserts:
      what: outline
      name: _standoffs_insert_<side>
      operation: subtract

  _magsafe_recess_right:
    $extends: outlines._magsafe_recess_left
    $args: [mirror_, right]
  _magsafe_recess_left:
    $params: [<mirror>, <side>]
    $args: ["", left]
    outer: 
      what: circle
      where: <mirror>magsafe
      radius: magsafe_outer_dia/2
    inner:
      what: circle
      where: <mirror>magsafe
      radius: magsafe_inner_dia/2
      operation: stack

pcbs:
  koala52_right:
    $args: [right, "mirror_"]
    $extends: pcbs.koala52_left
    footprints:
      koala.params.mirrored: true
      piezo.params:
        swap_nets: true
      switch.params:
        to: "{{colpin}}"
        from: "{{colrow}}"
      switch_thumb.params:
        to: "{{colrow}}"
        from: "{{colpin}}"
      diode.params:
        swap_nets: true
      diode_middy.params:
        swap_nets: true
      usb_mini.params:
          DMIN: P1
          DPLUS: P0

  koala52_left:
    $params: [<side>, <mirror>]
    $args: [left, ""]
    template: kicad8
    outlines:
      main:
        outline: pcb_<side>
    footprints:
      copper_fill:
        what: ceoloide/utility_filled_zone
        params:
          name: Copper Fill
          priority: 1
          remove_islands: always
          fill_type: solid
          net: GND
      version_text:
        what: larssont/text
        where:
          - ref: <mirror>version_text
        params:
          side: B
          face: Cascadia Mono
          text: *description
          mirrored: true
      koala:
        what: koala
        where:
          - ref: <mirror>version_text
            shift: [0.5, 6.5]
        params:
          side: B
      mounting_hole:
        what: larssont/mh_npth
        where: 
          - /^<mirror>(mh)_.*/
        params:
          hole_size: mh_dia
          hole_drill: mh_dia
          clearance: mh_clearance
          keepout_size: insert_standoff_dia
      piezo:
        what: larssont/piezo
        where:
          - ref: <mirror>piezo
        adjust:
          rotate: 0
        params:
          side: "B"
          reversible: false
          A: P2
          B: GND
      switch:
        what: ceoloide/switch_gateron_ks27_ks33
        where: 
          - 
            - /^<mirror>(matrix|thumb)_.*/
            - -/^<mirror>thumb_(middy|reachy)/
        params: &switch
          to: "{{colrow}}"
          from: "{{colpin}}"
          outer_pad_width_front: 2.2
          outer_pad_width_back: 2.2
          reversible: false
          include_centerhole_net: true
          CENTERHOLE: GND
          side: "B"
          hotswap: true
          solder: false
          include_keycap: false
          include_corner_marks: true
          include_socket_silks: true
      switch_thumb:
        what: ceoloide/switch_gateron_ks27_ks33
        where: 
          - /^<mirror>thumb_(middy|reachy)/
        params:
          <<: *switch
          from: "{{colrow}}"
          to: "{{colpin}}"
      diode:
        what: larssont/bav70
        where: 
          - /^<mirror>matrix_(pinky|middle|inner)_(num|top|home|bottom)/
          - <mirror>thumb_tucky
        params: &diode_params
          side: "B"
          A1: "<mirror>{{left_colrow}}"
          A2: "{{colrow}}"
          C: "{{rowpin}}"
        adjust: &diode_adj
          shift: [0, 0.3ky]
      diode_middy:
        what: larssont/bav70
        where: 
          - <mirror>thumb_middy
        params:
          <<: *diode_params
          A1: <mirror>middy_cluster
          A2: <mirror>reachy_cluster
        adjust:
          <<: *diode_adj
      mcu:
        what: larssont/rp2040_smd
        where:
          - ref: <mirror>mcu
        params:
          side: "B"
          width: mcu_x
          height: mcu_y
          inner_pad_h_length: mcu_inner_pad_h_length
          inner_pad_v_length: mcu_inner_pad_v_length
          outer_pad_h_length: mcu_outer_pad_h_length
          outer_pad_v_length: mcu_outer_pad_v_length
          pad_width: mcu_pad_width
          oval: true
          flip: false
          reversible: false
          via: false
          via_inner: true
          silkscreen_text: false
      usb_mini:
        what: larssont/usb_mini_b
        where:
          - ref: <mirror>usb_mini
        params:
          side: F
          VBUS: V5
          DMIN: P0
          DPLUS: P1
          ID: _ID
          GND: GND

cases:
  case_top_right:
    $args: [right]
    $extends: cases.case_top_left
  case_top_left:
    $params: [<side>]
    $args: [left]
    plate:
      name: _plate_<side>
      extrude: plate_ht
      operation: add
    gap:
      name: _plate_gap_<side>
      extrude: plate_pcb_gap
      operation: subtract
    mcu_usb_front_outer:
      name: _mcu_usb_front_outer_<side>
      extrude: 100
      shift: [0, -cs_comp_wall, -pcb_z + mcu_usb_z/2]
      rotate: [-90, 0, 0]
      operation: add
    mcu_usb_front_inner:
      name: _mcu_usb_front_inner_<side>
      extrude: 100
      shift: [0, 0, -pcb_z + mcu_usb_z/2]
      rotate: [-90, 0, 0]
      operation: subtract
    mcu_recess:
      name: _mcu_upper_recess_<side>
      extrude: mcu_upper_recess_z
      operation: subtract
    clean:
      name: _plate_<side>
      extrude: 1000
      operation: intersect

  _bottom_recesses_right:
    $args: [right]
    $extends: cases._bottom_recesses_left
  _bottom_recesses_left:
    $params: [<side>]
    $args: [left]
    foot_slots:
      name: _foot_slots_<side>
      extrude: foot_recess
    magsafe:
      name: _magsafe_recess_<side>
      extrude: magsafe_recess

  case_bottom_right:
    $args: [right]
    $extends: cases.case_bottom_left
  case_bottom_left:
    $params: [<side>]
    $args: [left]
    wall:
      name: case_outer_<side>
      extrude: cs_wall_z
      operation: add
    gap:
      name: case_inner_<side>
      shift: [0, 0, cs_standoff_z - cs_gap]
      extrude: cs_wall_z
      operation: subtract
    standoffs_base:
      name: _standoffs_base_<side>
      extrude: cs_standoff_z
      operation: add
    standoffs_insert:
      name: _standoffs_insert_<side>
      shift: [0, 0, cs_standoff_z - insert_z]
      extrude: insert_z
      operation: subtract
    mcu_usb:
      name: _mcu_usb_front_inner_<side>
      extrude: 100
      shift: [0, 0, cs_wall_z - pcb_z + mcu_usb_z/2]
      rotate: [-90, 0, 0]
      operation: subtract
    recesses:
      what: case
      name: _bottom_recesses_<side>
      operation: subtract